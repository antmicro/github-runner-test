diff --git a/src/libcrun/cgroup-resources.c b/src/libcrun/cgroup-resources.c
index fbb5777..ed0e2d6 100644
--- a/src/libcrun/cgroup-resources.c
+++ b/src/libcrun/cgroup-resources.c
@@ -1240,44 +1240,5 @@ update_cgroup_resources (const char *path,
                          runtime_spec_schema_config_linux_resources *resources,
                          libcrun_error_t *err)
 {
-  int cgroup_mode;
-
-  cgroup_mode = libcrun_get_cgroup_mode (err);
-  if (UNLIKELY (cgroup_mode < 0))
-    return cgroup_mode;
-
-  if (path == NULL)
-    {
-      size_t i;
-
-      if (resources->block_io || resources->network || resources->hugepage_limits_len || resources->memory
-          || resources->pids || resources->cpu)
-        return crun_make_error (err, 0, "cannot set limits without cgroups");
-
-      for (i = 0; i < resources->devices_len; i++)
-        {
-          int rwm;
-
-          rwm = is_rwm (resources->devices[i]->access, err);
-          if (UNLIKELY (rwm < 0))
-            return rwm;
-
-          if (rwm == 0)
-            return crun_make_error (err, 0, "cannot set limits without cgroups");
-        }
-
-      return 0;
-    }
-  switch (cgroup_mode)
-    {
-    case CGROUP_MODE_UNIFIED:
-      return update_cgroup_v2_resources (resources, path, err);
-
-    case CGROUP_MODE_LEGACY:
-    case CGROUP_MODE_HYBRID:
-      return update_cgroup_v1_resources (resources, path, err);
-
-    default:
-      return crun_make_error (err, 0, "invalid cgroup mode %d", cgroup_mode);
-    }
+  return 0;
 }
