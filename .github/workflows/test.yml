on: [push]

name: test

jobs:
  centos:
    container: centos:7
    runs-on: [self-hosted, Linux, X64]
    env:
      TEST_STRING: "VERY_COOL_STRING"
      TEST_STRING2: "VERY_COOL_STRING2"
      GHA_EXTERNAL_DISK: "auxdisk"
      GHA_PREEMPTIBLE: "false"
      GHA_SA: "gh-sa-runner-test-bucket"
    steps:
    - run: hostname
    - run: printenv
      env:
        TEST_STRING_RUN: "VERY_COOL_STRING3"
    - run: df -h .
    - run: df -h /mnt/aux
    - run: ls -alh /mnt/aux
    - name: Checkout tools repo
      uses: actions/checkout@v2
      with:
        repository: KittyKatt/screenFetch
        path: screenfetch
    - run: cp screenfetch/screenfetch-dev /usr/bin/screenfetch
    - run: chmod +x screenfetch
    - run: screenfetch
  ubuntu:
    strategy:
      fail-fast: false
      matrix:
        include:
          - {tag: "bionic"}
          - {tag: "focal"}
          - {tag: "impish"}
          - {tag: "hirsute"}
    container: ubuntu:${{ matrix.tag }}
    runs-on: [self-hosted, Linux, X64]
    env:
      TEST_STRING: "VERY_COOL_STRING"
      TEST_STRING2: "VERY_COOL_STRING2"
      MATRIX_PASS: ${{ matrix.tag }}
      GHA_EXTERNAL_DISK: "auxdisk"
      GHA_SA: "gh-sa-runner-test-bucket"
      GCE_METADATA_HOST: "169.254.169.254"
      DEBIAN_FRONTEND: noninteractive
    steps:
    - name: Setup repository
      uses: actions/checkout@v2
    - run: ./out_err.sh
    - run: hostname
    - run: printenv
      env:
        TEST_STRING_RUN: "VERY_COOL_STRING3"
    - run: df -h .
    - run: df -h /mnt/aux
    - run: ls -alh /mnt/aux
    - run: echo $TEST_STRING2 > test.txt
    - run: echo test
    - run: echo test2
    - run: echo test3
    - run: echo test4
    - run: echo test5
    - run: echo test6
    - run: ln -s /root/work/test.txt /root/work/test2.txt
    - run: touch /etc/test && ln -s /etc/test /root/work/test3.txt
    - run: ln -s /root/work/test.txt /root/work/text4.txt
    - run: apt -qqy update && apt -qqy install neofetch iproute2 curl gnupg
    - run: ip addr show
    - run: neofetch
    - run: |
        apt -qqy update && apt -qqy install python3 python3-pip
    - run: pip3 install google-auth requests
    - run: python3 test.py
    - run: |
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        apt -qqy update && apt -qqy install google-cloud-cli
    - run: |
        echo "This is test file" > test.txt
        gsutil cp test.txt gs://gh-actions-runner-test-bucket
    - uses: actions/upload-artifact@v2
      with:
        path: |
          **/*.txt
          **/plot_*.svg
